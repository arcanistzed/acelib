name: Release Creation

on:
  release:
    types: [published]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      # Substitute the Manifest and Download URLs in the module.json
      - name: Substitute Manifest and Download Links For Versioned Ones
        id: sub_manifest_link_version
        uses: microsoft/variable-substitution@v1
        with:
          files: "module.json"
        env:
          version: ${{github.event.release.tag_name}}
          url: https://github.com/${{github.repository}}
          manifest: https://github.com/${{github.repository}}/releases/latest/download/module.json
          download: https://github.com/${{github.repository}}/releases/download/${{github.event.release.tag_name}}/module.zip

      # Create a zip file with all files required by the module to add to the release
      - run: zip -r ./module.zip module.json README.md LICENSE CHANGELOG.md styles/ scripts/ templates/ languages/

      # Create a release for this specific version
      - name: Update Release with Files
        id: create_version_release
        uses: ncipollo/release-action@v1
        with:
          allowUpdates: true # Set this to false if you want to prevent updating existing releases
          name: ${{ github.event.release.name }}
          draft: ${{ github.event.release.unpublished }}
          prerelease: ${{ github.event.release.prerelease }}
          token: ${{ secrets.GITHUB_TOKEN }}
          artifacts: "./module.json, ./module.zip"
          tag: ${{ github.event.release.tag_name }}
          body: ${{ github.event.release.body }}

      # Publish to the Foundry Admin panel
      - name: Publish to Foundry VTT Admin panel
        id: publish_foundry_admin
        run: npx @ghost-fvtt/foundry-publish
        env:
          FVTT_MANIFEST_PATH: "module.json"
          FVTT_PACKAGE_ID: ${{ secrets.FOUNDRY_ADMIN_ID }}
          FVTT_USERNAME: ${{ secrets.FOUNDRY_ADMIN_USER }}
          FVTT_PASSWORD: ${{ secrets.FOUNDRY_ADMIN_PW }}
